plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

compileJava { options.encoding = "UTF-8" }

ext {

	mapstructVersion = "1.3.1.Final"
	springBootVersion = "2.3.1.RELEASE"
	springCoreVersion = "5.2.7.RELEASE"

}
tasks.withType(JavaCompile) {
	options.compilerArgs = [
			"-Amapstruct.suppressGeneratorTimestamp=true"
	]
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	compileOnly group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	implementation 'org.junit.platform:junit-platform-launcher:1.6.0'
	testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.9.0'
	testCompileOnly 'junit:junit:4.12'
	testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.8.1'
}

tasks.named('test') {
	useJUnitPlatform()
}
